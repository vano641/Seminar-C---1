//Напишите программу, которая будет преобразовывать десятичное число в двоичное
// 45 -> 101101
// 3 -> 11
// 2 -> 10

using System;
using static System.Console;
Clear();

Write("Введите число A: ");
int A = int.Parse(ReadLine());
//1 МЕТОД ВСТРОЕННЫХ ФУНКЦИЙ языка С#
string s1 = Convert.ToString(A, 2);
//ввтодим строковую переменную s1, выбираем класс Convert, и выбираем метод ToString
//у этого метода есть два параметра - A - передаваемае число, 2- формат в который мы его переводим.
WriteLine(s1);

string s2 = (DecToNums(A, 2));
WriteLine(s2);

//2 Универсальный способ
// Создадим метод который вернет нам строку.
// в качестве параметров передадим десятичное число number и 
// целочисленное число которое определит в какую систему мы будем переводить sys
string DecToNums(int number, int sys)
{
    //создадим пустую строку которая будет собирать наше число
    string result = "";
    //создадим строку в которой будут находиться все символы от 0 и до
    // необходимой нам системы счисления (16тиричная) F
    string chars = "0123456789ABCDEF";
    //далее будем использовать метод деления и поиска необходимых символов в строке
    while (number > 0)// постоянно уменьшаем наше число
    {
        int k = number / sys; // выделяем целую часть после деления
        int ost = number - k * sys; // эту целую часть * на основание системы и 
        //вычитаем ее из нашего числа
        // получая Остаток который мы и будем использовать в качестве базового 
        //символа при нахождении нужного нам числа
        
        result = chars[ost].ToString() + result;//то что получилось в разности 
        //подставляем в chars (строка это массив поэтому можем обращаться по элементу)
        // + значение нашей строки
        number /= sys;// уменьшаем number
    }
    return result;
}